{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"getting-started/","text":"Getting started \u00b6 Installation \u00b6 While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image . with pip recommended \u00b6 Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes. with docker recommended \u00b6 The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material with git \u00b6 Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material . Configuration \u00b6 Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true Feature flags \u00b6 These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml . Instant loading \u00b6 The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches. Tabs \u00b6 The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages. Language \u00b6 Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl Color scheme \u00b6 Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Color palette \u00b6 The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; } Primary color \u00b6 Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Accent color \u00b6 Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Fonts \u00b6 Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false Icons \u00b6 Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown ! Logo \u00b6 Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer. Favicon \u00b6 Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png Extras \u00b6 Adding a source repository \u00b6 To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not. Adding social links \u00b6 Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link. Adding a Web App Manifest \u00b6 A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest Integrations \u00b6 Google Analytics \u00b6 MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q . Disqus \u00b6 Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata . Extensions \u00b6 Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions Plugins \u00b6 MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"getting started"},{"location":"getting-started/#getting-started","text":"","title":"Getting started"},{"location":"getting-started/#installation","text":"While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image .","title":"Installation"},{"location":"getting-started/#with-pip-recommended","text":"Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes.","title":"with pip recommended"},{"location":"getting-started/#with-docker-recommended","text":"The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material","title":"with docker recommended"},{"location":"getting-started/#with-git","text":"Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material .","title":"with git"},{"location":"getting-started/#configuration","text":"Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true","title":"Configuration"},{"location":"getting-started/#feature-flags","text":"These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml .","title":"Feature flags"},{"location":"getting-started/#instant-loading","text":"The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches.","title":"Instant loading"},{"location":"getting-started/#tabs","text":"The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages.","title":"Tabs"},{"location":"getting-started/#language","text":"Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl","title":"Language"},{"location":"getting-started/#color-scheme","text":"Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Color scheme"},{"location":"getting-started/#color-palette","text":"The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; }","title":"Color palette"},{"location":"getting-started/#primary-color","text":"Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Primary color"},{"location":"getting-started/#accent-color","text":"Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Accent color"},{"location":"getting-started/#fonts","text":"Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false","title":"Fonts"},{"location":"getting-started/#icons","text":"Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown !","title":"Icons"},{"location":"getting-started/#logo","text":"Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer.","title":"Logo"},{"location":"getting-started/#favicon","text":"Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png","title":"Favicon"},{"location":"getting-started/#extras","text":"","title":"Extras"},{"location":"getting-started/#adding-a-source-repository","text":"To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not.","title":"Adding a source repository"},{"location":"getting-started/#adding-social-links","text":"Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link.","title":"Adding social links"},{"location":"getting-started/#adding-a-web-app-manifest","text":"A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest","title":"Adding a Web App Manifest"},{"location":"getting-started/#integrations","text":"","title":"Integrations"},{"location":"getting-started/#google-analytics","text":"MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q .","title":"Google Analytics"},{"location":"getting-started/#disqus","text":"Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata .","title":"Disqus"},{"location":"getting-started/#extensions","text":"Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions","title":"Extensions"},{"location":"getting-started/#plugins","text":"MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Plugins"},{"location":"index_/","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"index_/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"index_/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"index_/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"leveled-demo/","text":"OOOO \u00b6 OOOO.1 \u00b6 OOOO.1 \u00b6 demo Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FootNotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Leveled demo"},{"location":"leveled-demo/#oooo","text":"","title":"OOOO"},{"location":"leveled-demo/#oooo1","text":"","title":"OOOO.1"},{"location":"leveled-demo/#oooo1_1","text":"demo Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FootNotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"OOOO.1"},{"location":"markdown-example/","text":"OOOO \u00b6 OOOO.1 \u00b6 OOOO.1 \u00b6 demo Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FootNotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Md Exemplo2"},{"location":"markdown-example/#oooo","text":"","title":"OOOO"},{"location":"markdown-example/#oooo1","text":"","title":"OOOO.1"},{"location":"markdown-example/#oooo1_1","text":"demo Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FootNotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"OOOO.1"},{"location":"level/one/","text":"OOOO \u00b6 OOOO.1 \u00b6 OOOO.1 \u00b6 demo Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FootNotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Admonition"},{"location":"level/one/#oooo","text":"","title":"OOOO"},{"location":"level/one/#oooo1","text":"","title":"OOOO.1"},{"location":"level/one/#oooo1_1","text":"demo Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FootNotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"OOOO.1"},{"location":"processos/exemplo/","text":"Processo de Requisitos \u00b6 Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos. Descri\u00e7\u00e3o \u00b6 A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Ralacionamentos Atividades Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos Pol\u00edticas Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos","title":"Processo de Requisitos"},{"location":"processos/exemplo/#processo-de-requisitos","text":"Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos.","title":"Processo de Requisitos"},{"location":"processos/exemplo/#descricao","text":"A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Ralacionamentos Atividades Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos Pol\u00edticas Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos","title":"Descri\u00e7\u00e3o"},{"location":"processos/requisitos/","text":"Processo de Requisitos \u00b6 Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos. Descri\u00e7\u00e3o \u00b6 A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Ralacionamentos Atividades Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos Pol\u00edticas Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos","title":"Processo de Requisitos"},{"location":"processos/requisitos/#processo-de-requisitos","text":"Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos.","title":"Processo de Requisitos"},{"location":"processos/requisitos/#descricao","text":"A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Ralacionamentos Atividades Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos Pol\u00edticas Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos","title":"Descri\u00e7\u00e3o"},{"location":"processos/tarefas/escrever-exemplo/","text":"Levantar Requisitos \u00b6 Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos. Getting started \u00b6 Ralacionamentos Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos Descri\u00e7\u00e3o \u00b6 Some *Markdown*! :smile: A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos Installation \u00b6 While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image . with pip recommended \u00b6 Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes. with docker recommended \u00b6 The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material with git \u00b6 Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material . Configuration \u00b6 Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true Feature flags \u00b6 These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml . Instant loading \u00b6 The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches. Tabs \u00b6 The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages. Language \u00b6 Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl Color scheme \u00b6 Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Color palette \u00b6 The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; } Primary color \u00b6 Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Accent color \u00b6 Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Fonts \u00b6 Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false Icons \u00b6 Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown ! Logo \u00b6 Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer. Favicon \u00b6 Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png Extras \u00b6 Adding a source repository \u00b6 To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not. Adding social links \u00b6 Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link. Adding a Web App Manifest \u00b6 A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest Integrations \u00b6 Google Analytics \u00b6 MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q . Disqus \u00b6 Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata . Extensions \u00b6 Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions Plugins \u00b6 MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Escrever Requisitos"},{"location":"processos/tarefas/escrever-exemplo/#levantar-requisitos","text":"Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos.","title":"Levantar Requisitos"},{"location":"processos/tarefas/escrever-exemplo/#getting-started","text":"Ralacionamentos Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos","title":"Getting started"},{"location":"processos/tarefas/escrever-exemplo/#descricao","text":"Some *Markdown*! :smile: A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos","title":"Descri\u00e7\u00e3o"},{"location":"processos/tarefas/escrever-exemplo/#installation","text":"While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image .","title":"Installation"},{"location":"processos/tarefas/escrever-exemplo/#with-pip-recommended","text":"Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes.","title":"with pip recommended"},{"location":"processos/tarefas/escrever-exemplo/#with-docker-recommended","text":"The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material","title":"with docker recommended"},{"location":"processos/tarefas/escrever-exemplo/#with-git","text":"Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material .","title":"with git"},{"location":"processos/tarefas/escrever-exemplo/#configuration","text":"Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true","title":"Configuration"},{"location":"processos/tarefas/escrever-exemplo/#feature-flags","text":"These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml .","title":"Feature flags"},{"location":"processos/tarefas/escrever-exemplo/#instant-loading","text":"The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches.","title":"Instant loading"},{"location":"processos/tarefas/escrever-exemplo/#tabs","text":"The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages.","title":"Tabs"},{"location":"processos/tarefas/escrever-exemplo/#language","text":"Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl","title":"Language"},{"location":"processos/tarefas/escrever-exemplo/#color-scheme","text":"Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Color scheme"},{"location":"processos/tarefas/escrever-exemplo/#color-palette","text":"The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; }","title":"Color palette"},{"location":"processos/tarefas/escrever-exemplo/#primary-color","text":"Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Primary color"},{"location":"processos/tarefas/escrever-exemplo/#accent-color","text":"Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Accent color"},{"location":"processos/tarefas/escrever-exemplo/#fonts","text":"Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false","title":"Fonts"},{"location":"processos/tarefas/escrever-exemplo/#icons","text":"Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown !","title":"Icons"},{"location":"processos/tarefas/escrever-exemplo/#logo","text":"Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer.","title":"Logo"},{"location":"processos/tarefas/escrever-exemplo/#favicon","text":"Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png","title":"Favicon"},{"location":"processos/tarefas/escrever-exemplo/#extras","text":"","title":"Extras"},{"location":"processos/tarefas/escrever-exemplo/#adding-a-source-repository","text":"To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not.","title":"Adding a source repository"},{"location":"processos/tarefas/escrever-exemplo/#adding-social-links","text":"Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link.","title":"Adding social links"},{"location":"processos/tarefas/escrever-exemplo/#adding-a-web-app-manifest","text":"A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest","title":"Adding a Web App Manifest"},{"location":"processos/tarefas/escrever-exemplo/#integrations","text":"","title":"Integrations"},{"location":"processos/tarefas/escrever-exemplo/#google-analytics","text":"MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q .","title":"Google Analytics"},{"location":"processos/tarefas/escrever-exemplo/#disqus","text":"Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata .","title":"Disqus"},{"location":"processos/tarefas/escrever-exemplo/#extensions","text":"Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions","title":"Extensions"},{"location":"processos/tarefas/escrever-exemplo/#plugins","text":"MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Plugins"},{"location":"processos/tarefas/escrever-requisitos/","text":"Levantar Requisitos \u00b6 Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos. Getting started \u00b6 Ralacionamentos Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos Descri\u00e7\u00e3o \u00b6 Some *Markdown*! :smile: A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos Installation \u00b6 While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image . with pip recommended \u00b6 Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes. with docker recommended \u00b6 The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material with git \u00b6 Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material . Configuration \u00b6 Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true Feature flags \u00b6 These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml . Instant loading \u00b6 The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches. Tabs \u00b6 The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages. Language \u00b6 Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl Color scheme \u00b6 Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Color palette \u00b6 The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; } Primary color \u00b6 Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Accent color \u00b6 Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Fonts \u00b6 Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false Icons \u00b6 Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown ! Logo \u00b6 Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer. Favicon \u00b6 Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png Extras \u00b6 Adding a source repository \u00b6 To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not. Adding social links \u00b6 Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link. Adding a Web App Manifest \u00b6 A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest Integrations \u00b6 Google Analytics \u00b6 MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q . Disqus \u00b6 Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata . Extensions \u00b6 Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions Plugins \u00b6 MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Escrever Requisitos"},{"location":"processos/tarefas/escrever-requisitos/#levantar-requisitos","text":"Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos.","title":"Levantar Requisitos"},{"location":"processos/tarefas/escrever-requisitos/#getting-started","text":"Ralacionamentos Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos","title":"Getting started"},{"location":"processos/tarefas/escrever-requisitos/#descricao","text":"Some *Markdown*! :smile: A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos","title":"Descri\u00e7\u00e3o"},{"location":"processos/tarefas/escrever-requisitos/#installation","text":"While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image .","title":"Installation"},{"location":"processos/tarefas/escrever-requisitos/#with-pip-recommended","text":"Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes.","title":"with pip recommended"},{"location":"processos/tarefas/escrever-requisitos/#with-docker-recommended","text":"The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material","title":"with docker recommended"},{"location":"processos/tarefas/escrever-requisitos/#with-git","text":"Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material .","title":"with git"},{"location":"processos/tarefas/escrever-requisitos/#configuration","text":"Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true","title":"Configuration"},{"location":"processos/tarefas/escrever-requisitos/#feature-flags","text":"These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml .","title":"Feature flags"},{"location":"processos/tarefas/escrever-requisitos/#instant-loading","text":"The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches.","title":"Instant loading"},{"location":"processos/tarefas/escrever-requisitos/#tabs","text":"The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages.","title":"Tabs"},{"location":"processos/tarefas/escrever-requisitos/#language","text":"Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl","title":"Language"},{"location":"processos/tarefas/escrever-requisitos/#color-scheme","text":"Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Color scheme"},{"location":"processos/tarefas/escrever-requisitos/#color-palette","text":"The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; }","title":"Color palette"},{"location":"processos/tarefas/escrever-requisitos/#primary-color","text":"Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Primary color"},{"location":"processos/tarefas/escrever-requisitos/#accent-color","text":"Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Accent color"},{"location":"processos/tarefas/escrever-requisitos/#fonts","text":"Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false","title":"Fonts"},{"location":"processos/tarefas/escrever-requisitos/#icons","text":"Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown !","title":"Icons"},{"location":"processos/tarefas/escrever-requisitos/#logo","text":"Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer.","title":"Logo"},{"location":"processos/tarefas/escrever-requisitos/#favicon","text":"Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png","title":"Favicon"},{"location":"processos/tarefas/escrever-requisitos/#extras","text":"","title":"Extras"},{"location":"processos/tarefas/escrever-requisitos/#adding-a-source-repository","text":"To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not.","title":"Adding a source repository"},{"location":"processos/tarefas/escrever-requisitos/#adding-social-links","text":"Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link.","title":"Adding social links"},{"location":"processos/tarefas/escrever-requisitos/#adding-a-web-app-manifest","text":"A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest","title":"Adding a Web App Manifest"},{"location":"processos/tarefas/escrever-requisitos/#integrations","text":"","title":"Integrations"},{"location":"processos/tarefas/escrever-requisitos/#google-analytics","text":"MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q .","title":"Google Analytics"},{"location":"processos/tarefas/escrever-requisitos/#disqus","text":"Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata .","title":"Disqus"},{"location":"processos/tarefas/escrever-requisitos/#extensions","text":"Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions","title":"Extensions"},{"location":"processos/tarefas/escrever-requisitos/#plugins","text":"MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Plugins"},{"location":"processos/tarefas/levantar-exemplo/","text":"Macros Plugin Environment \u00b6 General List \u00b6 All available variables and filters within the macros plugin: Variable Type Content extra dict social = [{'icon': 'fontawesome/brands/github', 'link': 'https://github.com/squidfunk'}, {'icon': 'fontawesome/brands/gitter', 'link': 'https://gitter.im/squidfunk/mkdocs-material'}, {'icon': 'fontawesome/brands/docker', 'link': 'https://hub.docker.com/r/squidfunk/mkdocs-material/'}, {'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/squidfunk'}, {'icon': 'fontawesome/brands/linkedin', 'link': 'https://linkedin.com/in/squidfunk/'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://instagram.com/squidfunk'}] config Config config_file_path = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\mkdocs.yml', site_name = 'Site Name no YML', nav = [{'Home': 'index.md'}, {'Home': 'getting-started'}, {'Md Exemplo': 'markdown-example.md'}, {'Md Exemplo2': 'markdown-example.md'}, {'Vis\u00e3o Geral': [{'ee1': [{'eee': 'visao-geral/one.md'}, {'eee1': 'level/one.md'}]}, {'ee2': [{'eee2': 'visao-geral/one.md'}]}]}, {'Estrutura e Servi\u00e7os': [{'Admonition': 'level/one.md'}]}, {'Pap\u00e9is': [{'Admonition': 'level/one.md'}]}, {'Pol\u00edticas': [{'Admonition': 'level/one.md'}]}, {'Ciclos de Vida': [{'Admonition': 'level/one.md'}]}, {'Processos': ['processos/requisitos.md']}, {'Templates': [{'Admonition': 'level/one.md'}]}, {'Ferramentas': [{'Admonition': 'level/one.md'}]}, {'Guias e Procedimentos': [{'Admonition': 'level/one.md'}]}, {'Padr\u00f5es': [{'Admonition': 'level/one.md'}]}, {'Tarefas': [{'Processo de Requisitos': ['processos/tarefas/levantar-requisitos.md', 'processos/tarefas/escrever-requisitos.md']}, {'Processo de Exemplo': ['processos/tarefas/levantar-exemplo.md', 'processos/tarefas/escrever-exemplo.md']}]}], pages [ NoneType ], site_url = 'https://squidfunk.github.io/mkdocs-material/', site_description = 'Create a branded static site from a set of Markdown files to host the documentation of your Open Source or commercial project \u2013 customizable, searchable, mobile-friendly, 40+ languages', site_author = 'Martin Donath', theme [ Theme ], docs_dir = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\docs', site_dir = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\site', copyright = 'Copyright \u00a9 2016 - 2020 Martin Donath', google_analytics = [None, 'auto'], dev_addr [ Address ], use_directory_urls = True, repo_url = 'https://github.com/squidfunk/mkdocs-material', repo_name = 'squidfunk/mkdocs-material', edit_uri = '', extra_css = [], extra_javascript = [], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'markdown.extensions.admonition', 'markdown.extensions.attr_list', 'markdown.extensions.codehilite', 'markdown.extensions.def_list', 'markdown.extensions.footnotes', 'markdown.extensions.meta', 'markdown.extensions.toc', 'pymdownx.arithmatex', 'pymdownx.betterem', 'pymdownx.caret', 'pymdownx.critic', 'pymdownx.details', 'pymdownx.emoji', 'pymdownx.inlinehilite', 'pymdownx.keys', 'pymdownx.magiclink', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.superfences', 'pymdownx.tabbed', 'pymdownx.tasklist', 'pymdownx.tilde'], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] environment dict system = 'Windows', system_version = '10', python_version = '3.8.3', mkdocs_version = '1.1.2', macros_plugin_version = '0.4.9', jinja2_version = '2.11.2' git NoneType None context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). social list [{'icon': 'fontawesome/brands/github', 'link': 'https://github.com/squidfunk'}, {'icon': 'fontawesome/brands/gitter', 'link': 'https://gitter.im/squidfunk/mkdocs-material'}, {'icon': 'fontawesome/brands/docker', 'link': 'https://hub.docker.com/r/squidfunk/mkdocs-material/'}, {'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/squidfunk'}, {'icon': 'fontawesome/brands/linkedin', 'link': 'https://linkedin.com/in/squidfunk/'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://instagram.com/squidfunk'}] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ builtin_function_or_method ], escape [ builtin_function_or_method ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ builtin_function_or_method ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Home', url='/mkdocs-material/') Link(title='Home', url='getting-started') Page(title='Md Exemplo', url='/mkdocs-material/markdown-example/') Page(title='Md Exemplo2', url='/mkdocs-material/markdown-example/') Section(title='Vis\u00e3o Geral') Section(title='ee1') Page(title='eee', url='/mkdocs-material/visao-geral/one/') Page(title='eee1', url='/mkdocs-material/level/one/') Section(title='ee2') Page(title='eee2', url='/mkdocs-material/visao-geral/one/') Section(title='Estrutura e Servi\u00e7os') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Pap\u00e9is') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Pol\u00edticas') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Ciclos de Vida') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Processos') Page(title='Processo de Requisitos', url='/mkdocs-material/processos/requisitos/') Section(title='Templates') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Ferramentas') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Guias e Procedimentos') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Padr\u00f5es') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Tarefas') Section(title='Processo de Requisitos') Page(title=[blank], url='/mkdocs-material/processos/tarefas/levantar-requisitos/') Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-requisitos/') Section(title='Processo de Exemplo') Page(title='Levantar Requisitos', url='/mkdocs-material/processos/tarefas/levantar-exemplo/') Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-exemplo/') page Page Page(title='Levantar Requisitos', url='/mkdocs-material/processos/tarefas/levantar-exemplo/') Config Information \u00b6 Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\mkdocs.yml' site_name str 'Site Name no YML' nav list [{'Home': 'index.md'}, {'Home': 'getting-started'}, {'Md Exemplo': 'markdown-example.md'}, {'Md Exemplo2': 'markdown-example.md'}, {'Vis\u00e3o Geral': [{'ee1': [{'eee': 'visao-geral/one.md'}, {'eee1': 'level/one.md'}]}, {'ee2': [{'eee2': 'visao-geral/one.md'}]}]}, {'Estrutura e Servi\u00e7os': [{'Admonition': 'level/one.md'}]}, {'Pap\u00e9is': [{'Admonition': 'level/one.md'}]}, {'Pol\u00edticas': [{'Admonition': 'level/one.md'}]}, {'Ciclos de Vida': [{'Admonition': 'level/one.md'}]}, {'Processos': ['processos/requisitos.md']}, {'Templates': [{'Admonition': 'level/one.md'}]}, {'Ferramentas': [{'Admonition': 'level/one.md'}]}, {'Guias e Procedimentos': [{'Admonition': 'level/one.md'}]}, {'Padr\u00f5es': [{'Admonition': 'level/one.md'}]}, {'Tarefas': [{'Processo de Requisitos': ['processos/tarefas/levantar-requisitos.md', 'processos/tarefas/escrever-requisitos.md']}, {'Processo de Exemplo': ['processos/tarefas/levantar-exemplo.md', 'processos/tarefas/escrever-exemplo.md']}]}] pages NoneType None site_url str 'https://squidfunk.github.io/mkdocs-material/' site_description str 'Create a branded static site from a set of Markdown files to host the documentation of your Open Source or commercial project \u2013 customizable, searchable, mobile-friendly, 40+ languages' site_author str 'Martin Donath' theme Theme Theme(name='material', dirs=['C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\material', 'c:\\\\python38\\\\lib\\\\site-packages\\\\material', 'c:\\\\python38\\\\lib\\\\site-packages\\\\mkdocs\\\\templates'], static_templates=['sitemap.xml', '404.html'], language='en', direction=None, features=['tabs'], palette={'scheme': 'default', 'primary': 'indigo', 'accent': 'indigo'}, font={'text': 'Roboto', 'code': 'Roboto Mono'}, icon={'logo': 'logo'}, favicon='assets/favicon.png', include_search_page=False, search_index_only=True) docs_dir str 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\docs' site_dir str 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\site' copyright str 'Copyright \u00a9 2016 - 2020 Martin Donath' google_analytics list [None, 'auto'] dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str 'https://github.com/squidfunk/mkdocs-material' repo_name str 'squidfunk/mkdocs-material' edit_uri str '' extra_css list [] extra_javascript list [] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'markdown.extensions.admonition', 'markdown.extensions.attr_list', 'markdown.extensions.codehilite', 'markdown.extensions.def_list', 'markdown.extensions.footnotes', 'markdown.extensions.meta', 'markdown.extensions.toc', 'pymdownx.arithmatex', 'pymdownx.betterem', 'pymdownx.caret', 'pymdownx.critic', 'pymdownx.details', 'pymdownx.emoji', 'pymdownx.inlinehilite', 'pymdownx.keys', 'pymdownx.magiclink', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.superfences', 'pymdownx.tabbed', 'pymdownx.tasklist', 'pymdownx.tilde'] mdx_configs dict markdown.extensions.codehilite [ dict ], markdown.extensions.toc [ dict ], pymdownx.betterem [ dict ], pymdownx.emoji [ dict ], pymdownx.magiclink [ dict ], pymdownx.snippets [ dict ], pymdownx.tasklist [ dict ] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'social': [{'icon': 'fontawesome/brands/github', 'link': 'https://github.com/squidfunk'}, {'icon': 'fontawesome/brands/gitter', 'link': 'https://gitter.im/squidfunk/mkdocs-material'}, {'icon': 'fontawesome/brands/docker', 'link': 'https://hub.docker.com/r/squidfunk/mkdocs-material/'}, {'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/squidfunk'}, {'icon': 'fontawesome/brands/linkedin', 'link': 'https://linkedin.com/in/squidfunk/'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://instagram.com/squidfunk'}]} plugins PluginCollection search [ SearchPlugin ], macros [ MacrosPlugin ] Git Information \u00b6 Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content None NoneType None Page Attributes \u00b6 Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'processos\\\\tarefas\\\\levantar-exemplo.md', abs_src_path = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\docs\\\\processos\\\\tarefas\\\\levantar-exemplo.md', name = 'levantar-exemplo', dest_path = 'processos\\\\tarefas\\\\levantar-exemplo\\\\index.html', abs_dest_path = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\site\\\\processos\\\\tarefas\\\\levantar-exemplo\\\\index.html', url = 'processos/tarefas/levantar-exemplo/' title str 'Levantar Requisitos' parent Section title = 'Processo de Exemplo', children = [Page(title='Levantar Requisitos', url='/mkdocs-material/processos/tarefas/levantar-exemplo/'), Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-exemplo/')], parent [ Section ], _Section__active = False, is_section = True, is_page = False, is_link = False children NoneType None previous_page Page Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-requisitos/') next_page Page Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-exemplo/') _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2020-05-28' canonical_url str 'https://squidfunk.github.io/mkdocs-material/processos/tarefas/levantar-exemplo/' abs_url str '/mkdocs-material/processos/tarefas/levantar-exemplo/' edit_url NoneType None markdown str '{{ macros_info() }}\\n' content NoneType None toc list [] meta dict template = 'overrides/main.html', title = 'Levantar Requisitos' To have all titles of all pages, use: {% for page in navigation.pages %} - {{ page.title }} {% endfor% } Plugin Filters \u00b6 These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging) Builtin Jinja2 Filters \u00b6 These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may want to use this function to order them by either key or value. e builtin_function_or_method escape(s) -> markup escape builtin_function_or_method escape(s) -> markup filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( environment, seq ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( environment, value, attribute, expr ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, indentfirst, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( eval_ctx, value, d, attribute, do_escape, idx, item ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( value ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, seq, func, item ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value, verbose ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( value, slices, fill_with, seq, length, items_per_slice, slices_with_extra, offset, slice_number, start, end, tmp ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string builtin_function_or_method soft_unicode(object) -> string striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( environment, iterable, attribute, start ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, policies, rv ) Converts URLs in plain text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( _eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumper, options ) Dumps a structure to JSON so that it's safe to use in <script> tags. It accepts the same arguments and returns a JSON string. Note that this is available in templates through the |tojson filter which will also mark the result as safe. Due to how this function escapes certain characters this is safe even if used outside of <script> tags.","title":"Levantar Requisitos"},{"location":"processos/tarefas/levantar-exemplo/#macros-plugin-environment","text":"","title":"Macros Plugin Environment"},{"location":"processos/tarefas/levantar-exemplo/#general-list","text":"All available variables and filters within the macros plugin: Variable Type Content extra dict social = [{'icon': 'fontawesome/brands/github', 'link': 'https://github.com/squidfunk'}, {'icon': 'fontawesome/brands/gitter', 'link': 'https://gitter.im/squidfunk/mkdocs-material'}, {'icon': 'fontawesome/brands/docker', 'link': 'https://hub.docker.com/r/squidfunk/mkdocs-material/'}, {'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/squidfunk'}, {'icon': 'fontawesome/brands/linkedin', 'link': 'https://linkedin.com/in/squidfunk/'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://instagram.com/squidfunk'}] config Config config_file_path = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\mkdocs.yml', site_name = 'Site Name no YML', nav = [{'Home': 'index.md'}, {'Home': 'getting-started'}, {'Md Exemplo': 'markdown-example.md'}, {'Md Exemplo2': 'markdown-example.md'}, {'Vis\u00e3o Geral': [{'ee1': [{'eee': 'visao-geral/one.md'}, {'eee1': 'level/one.md'}]}, {'ee2': [{'eee2': 'visao-geral/one.md'}]}]}, {'Estrutura e Servi\u00e7os': [{'Admonition': 'level/one.md'}]}, {'Pap\u00e9is': [{'Admonition': 'level/one.md'}]}, {'Pol\u00edticas': [{'Admonition': 'level/one.md'}]}, {'Ciclos de Vida': [{'Admonition': 'level/one.md'}]}, {'Processos': ['processos/requisitos.md']}, {'Templates': [{'Admonition': 'level/one.md'}]}, {'Ferramentas': [{'Admonition': 'level/one.md'}]}, {'Guias e Procedimentos': [{'Admonition': 'level/one.md'}]}, {'Padr\u00f5es': [{'Admonition': 'level/one.md'}]}, {'Tarefas': [{'Processo de Requisitos': ['processos/tarefas/levantar-requisitos.md', 'processos/tarefas/escrever-requisitos.md']}, {'Processo de Exemplo': ['processos/tarefas/levantar-exemplo.md', 'processos/tarefas/escrever-exemplo.md']}]}], pages [ NoneType ], site_url = 'https://squidfunk.github.io/mkdocs-material/', site_description = 'Create a branded static site from a set of Markdown files to host the documentation of your Open Source or commercial project \u2013 customizable, searchable, mobile-friendly, 40+ languages', site_author = 'Martin Donath', theme [ Theme ], docs_dir = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\docs', site_dir = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\site', copyright = 'Copyright \u00a9 2016 - 2020 Martin Donath', google_analytics = [None, 'auto'], dev_addr [ Address ], use_directory_urls = True, repo_url = 'https://github.com/squidfunk/mkdocs-material', repo_name = 'squidfunk/mkdocs-material', edit_uri = '', extra_css = [], extra_javascript = [], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'markdown.extensions.admonition', 'markdown.extensions.attr_list', 'markdown.extensions.codehilite', 'markdown.extensions.def_list', 'markdown.extensions.footnotes', 'markdown.extensions.meta', 'markdown.extensions.toc', 'pymdownx.arithmatex', 'pymdownx.betterem', 'pymdownx.caret', 'pymdownx.critic', 'pymdownx.details', 'pymdownx.emoji', 'pymdownx.inlinehilite', 'pymdownx.keys', 'pymdownx.magiclink', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.superfences', 'pymdownx.tabbed', 'pymdownx.tasklist', 'pymdownx.tilde'], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] environment dict system = 'Windows', system_version = '10', python_version = '3.8.3', mkdocs_version = '1.1.2', macros_plugin_version = '0.4.9', jinja2_version = '2.11.2' git NoneType None context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). social list [{'icon': 'fontawesome/brands/github', 'link': 'https://github.com/squidfunk'}, {'icon': 'fontawesome/brands/gitter', 'link': 'https://gitter.im/squidfunk/mkdocs-material'}, {'icon': 'fontawesome/brands/docker', 'link': 'https://hub.docker.com/r/squidfunk/mkdocs-material/'}, {'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/squidfunk'}, {'icon': 'fontawesome/brands/linkedin', 'link': 'https://linkedin.com/in/squidfunk/'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://instagram.com/squidfunk'}] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ builtin_function_or_method ], escape [ builtin_function_or_method ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ builtin_function_or_method ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Home', url='/mkdocs-material/') Link(title='Home', url='getting-started') Page(title='Md Exemplo', url='/mkdocs-material/markdown-example/') Page(title='Md Exemplo2', url='/mkdocs-material/markdown-example/') Section(title='Vis\u00e3o Geral') Section(title='ee1') Page(title='eee', url='/mkdocs-material/visao-geral/one/') Page(title='eee1', url='/mkdocs-material/level/one/') Section(title='ee2') Page(title='eee2', url='/mkdocs-material/visao-geral/one/') Section(title='Estrutura e Servi\u00e7os') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Pap\u00e9is') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Pol\u00edticas') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Ciclos de Vida') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Processos') Page(title='Processo de Requisitos', url='/mkdocs-material/processos/requisitos/') Section(title='Templates') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Ferramentas') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Guias e Procedimentos') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Padr\u00f5es') Page(title='Admonition', url='/mkdocs-material/level/one/') Section(title='Tarefas') Section(title='Processo de Requisitos') Page(title=[blank], url='/mkdocs-material/processos/tarefas/levantar-requisitos/') Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-requisitos/') Section(title='Processo de Exemplo') Page(title='Levantar Requisitos', url='/mkdocs-material/processos/tarefas/levantar-exemplo/') Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-exemplo/') page Page Page(title='Levantar Requisitos', url='/mkdocs-material/processos/tarefas/levantar-exemplo/')","title":"General List"},{"location":"processos/tarefas/levantar-exemplo/#config-information","text":"Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\mkdocs.yml' site_name str 'Site Name no YML' nav list [{'Home': 'index.md'}, {'Home': 'getting-started'}, {'Md Exemplo': 'markdown-example.md'}, {'Md Exemplo2': 'markdown-example.md'}, {'Vis\u00e3o Geral': [{'ee1': [{'eee': 'visao-geral/one.md'}, {'eee1': 'level/one.md'}]}, {'ee2': [{'eee2': 'visao-geral/one.md'}]}]}, {'Estrutura e Servi\u00e7os': [{'Admonition': 'level/one.md'}]}, {'Pap\u00e9is': [{'Admonition': 'level/one.md'}]}, {'Pol\u00edticas': [{'Admonition': 'level/one.md'}]}, {'Ciclos de Vida': [{'Admonition': 'level/one.md'}]}, {'Processos': ['processos/requisitos.md']}, {'Templates': [{'Admonition': 'level/one.md'}]}, {'Ferramentas': [{'Admonition': 'level/one.md'}]}, {'Guias e Procedimentos': [{'Admonition': 'level/one.md'}]}, {'Padr\u00f5es': [{'Admonition': 'level/one.md'}]}, {'Tarefas': [{'Processo de Requisitos': ['processos/tarefas/levantar-requisitos.md', 'processos/tarefas/escrever-requisitos.md']}, {'Processo de Exemplo': ['processos/tarefas/levantar-exemplo.md', 'processos/tarefas/escrever-exemplo.md']}]}] pages NoneType None site_url str 'https://squidfunk.github.io/mkdocs-material/' site_description str 'Create a branded static site from a set of Markdown files to host the documentation of your Open Source or commercial project \u2013 customizable, searchable, mobile-friendly, 40+ languages' site_author str 'Martin Donath' theme Theme Theme(name='material', dirs=['C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\material', 'c:\\\\python38\\\\lib\\\\site-packages\\\\material', 'c:\\\\python38\\\\lib\\\\site-packages\\\\mkdocs\\\\templates'], static_templates=['sitemap.xml', '404.html'], language='en', direction=None, features=['tabs'], palette={'scheme': 'default', 'primary': 'indigo', 'accent': 'indigo'}, font={'text': 'Roboto', 'code': 'Roboto Mono'}, icon={'logo': 'logo'}, favicon='assets/favicon.png', include_search_page=False, search_index_only=True) docs_dir str 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\docs' site_dir str 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\site' copyright str 'Copyright \u00a9 2016 - 2020 Martin Donath' google_analytics list [None, 'auto'] dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str 'https://github.com/squidfunk/mkdocs-material' repo_name str 'squidfunk/mkdocs-material' edit_uri str '' extra_css list [] extra_javascript list [] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'markdown.extensions.admonition', 'markdown.extensions.attr_list', 'markdown.extensions.codehilite', 'markdown.extensions.def_list', 'markdown.extensions.footnotes', 'markdown.extensions.meta', 'markdown.extensions.toc', 'pymdownx.arithmatex', 'pymdownx.betterem', 'pymdownx.caret', 'pymdownx.critic', 'pymdownx.details', 'pymdownx.emoji', 'pymdownx.inlinehilite', 'pymdownx.keys', 'pymdownx.magiclink', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.superfences', 'pymdownx.tabbed', 'pymdownx.tasklist', 'pymdownx.tilde'] mdx_configs dict markdown.extensions.codehilite [ dict ], markdown.extensions.toc [ dict ], pymdownx.betterem [ dict ], pymdownx.emoji [ dict ], pymdownx.magiclink [ dict ], pymdownx.snippets [ dict ], pymdownx.tasklist [ dict ] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'social': [{'icon': 'fontawesome/brands/github', 'link': 'https://github.com/squidfunk'}, {'icon': 'fontawesome/brands/gitter', 'link': 'https://gitter.im/squidfunk/mkdocs-material'}, {'icon': 'fontawesome/brands/docker', 'link': 'https://hub.docker.com/r/squidfunk/mkdocs-material/'}, {'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/squidfunk'}, {'icon': 'fontawesome/brands/linkedin', 'link': 'https://linkedin.com/in/squidfunk/'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://instagram.com/squidfunk'}]} plugins PluginCollection search [ SearchPlugin ], macros [ MacrosPlugin ]","title":"Config Information"},{"location":"processos/tarefas/levantar-exemplo/#git-information","text":"Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content None NoneType None","title":"Git Information"},{"location":"processos/tarefas/levantar-exemplo/#page-attributes","text":"Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'processos\\\\tarefas\\\\levantar-exemplo.md', abs_src_path = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\docs\\\\processos\\\\tarefas\\\\levantar-exemplo.md', name = 'levantar-exemplo', dest_path = 'processos\\\\tarefas\\\\levantar-exemplo\\\\index.html', abs_dest_path = 'C:\\\\Users\\\\robazza\\\\docs\\\\mkdocs-test\\\\mkdocs-one\\\\site\\\\processos\\\\tarefas\\\\levantar-exemplo\\\\index.html', url = 'processos/tarefas/levantar-exemplo/' title str 'Levantar Requisitos' parent Section title = 'Processo de Exemplo', children = [Page(title='Levantar Requisitos', url='/mkdocs-material/processos/tarefas/levantar-exemplo/'), Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-exemplo/')], parent [ Section ], _Section__active = False, is_section = True, is_page = False, is_link = False children NoneType None previous_page Page Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-requisitos/') next_page Page Page(title='Escrever Requisitos', url='/mkdocs-material/processos/tarefas/escrever-exemplo/') _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2020-05-28' canonical_url str 'https://squidfunk.github.io/mkdocs-material/processos/tarefas/levantar-exemplo/' abs_url str '/mkdocs-material/processos/tarefas/levantar-exemplo/' edit_url NoneType None markdown str '{{ macros_info() }}\\n' content NoneType None toc list [] meta dict template = 'overrides/main.html', title = 'Levantar Requisitos' To have all titles of all pages, use: {% for page in navigation.pages %} - {{ page.title }} {% endfor% }","title":"Page Attributes"},{"location":"processos/tarefas/levantar-exemplo/#plugin-filters","text":"These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging)","title":"Plugin Filters"},{"location":"processos/tarefas/levantar-exemplo/#builtin-jinja2-filters","text":"These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may want to use this function to order them by either key or value. e builtin_function_or_method escape(s) -> markup escape builtin_function_or_method escape(s) -> markup filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( environment, seq ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( environment, value, attribute, expr ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, indentfirst, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( eval_ctx, value, d, attribute, do_escape, idx, item ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( value ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, seq, func, item ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value, verbose ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( value, slices, fill_with, seq, length, items_per_slice, slices_with_extra, offset, slice_number, start, end, tmp ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string builtin_function_or_method soft_unicode(object) -> string striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( environment, iterable, attribute, start ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, policies, rv ) Converts URLs in plain text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( _eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumper, options ) Dumps a structure to JSON so that it's safe to use in <script> tags. It accepts the same arguments and returns a JSON string. Note that this is available in templates through the |tojson filter which will also mark the result as safe. Due to how this function escapes certain characters this is safe even if used outside of <script> tags.","title":"Builtin Jinja2 Filters"},{"location":"processos/tarefas/levantar-requisitos/","text":"Levantar Requisitos \u00b6 Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos. Getting started \u00b6 Ralacionamentos Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos Descri\u00e7\u00e3o \u00b6 Some *Markdown*! :smile: A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos Installation \u00b6 While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image . with pip recommended \u00b6 Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes. with docker recommended \u00b6 The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material with git \u00b6 Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material . Configuration \u00b6 Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true Feature flags \u00b6 These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml . Instant loading \u00b6 The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches. Tabs \u00b6 The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages. Language \u00b6 Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl Color scheme \u00b6 Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Color palette \u00b6 The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; } Primary color \u00b6 Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Accent color \u00b6 Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Fonts \u00b6 Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false Icons \u00b6 Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown ! Logo \u00b6 Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer. Favicon \u00b6 Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png Extras \u00b6 Adding a source repository \u00b6 To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not. Adding social links \u00b6 Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link. Adding a Web App Manifest \u00b6 A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest Integrations \u00b6 Google Analytics \u00b6 MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q . Disqus \u00b6 Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata . Extensions \u00b6 Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions Plugins \u00b6 MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Levantar Requisitos"},{"location":"processos/tarefas/levantar-requisitos/#levantar-requisitos","text":"Estabelecer uma sistem\u00e1tica para coletar e detalhar os requisitos dos Projetos.","title":"Levantar Requisitos"},{"location":"processos/tarefas/levantar-requisitos/#getting-started","text":"Ralacionamentos Levantar Requisitos Elaborar Requisitos Elaborar Modelo de Dados Validar Requisitos","title":"Getting started"},{"location":"processos/tarefas/levantar-requisitos/#descricao","text":"Some *Markdown*! :smile: A Solicita\u00e7\u00e3o de Servi\u00e7o \u00e9 aberta pelo Gestor de Neg\u00f3cio e encaminhada para an\u00e1lise da Coordena\u00e7\u00e3o de Tecnologia e Comunica\u00e7\u00e3o. O Auditor de Neg\u00f3cio respons\u00e1vel pela \u00e1rea registra a abertura da demanda/projeto na Ferramenta de Gest\u00e3o de Demandas. Somente ap\u00f3s a aprova\u00e7\u00e3o da COT, um projeto pode ser iniciado no servi\u00e7o de F\u00e1brica, iniciando com a fase de levantamento de requisitos. O processo de requisitos ocorre em duas fases distintas. Na identifica\u00e7\u00e3o e posteriormente com detalhamento dos requisitos levantados: A primeira \u00e9 a Fase de Levantamento de Requisitos, onde s\u00e3o identificados e documentados os requisitos do projeto de uma forma mais macro neste momento; Na Fase de Elabora\u00e7\u00e3o dos Requisitos, \u00e9 onde s\u00e3o detalhados os requisitos levantados e gerados todos entreg\u00e1veis necess\u00e1rios para atendimento da demanda. Back to topBack to top Considera\u00e7\u00f5es de Teclas Verifica\u00e7\u00f5es Reuni\u00f5es peri\u00f3dicas de Acompanhamento do Projeto Verifica\u00e7\u00f5es Peri\u00f3dicas conforme Planejamento / Cronograma Informa\u00e7\u00f5es Adicionais Conceitos Pol\u00edticas de Engenharia de Software Pol\u00edticas de Gest\u00e3o de Projetos","title":"Descri\u00e7\u00e3o"},{"location":"processos/tarefas/levantar-requisitos/#installation","text":"While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image .","title":"Installation"},{"location":"processos/tarefas/levantar-requisitos/#with-pip-recommended","text":"Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes.","title":"with pip recommended"},{"location":"processos/tarefas/levantar-requisitos/#with-docker-recommended","text":"The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material","title":"with docker recommended"},{"location":"processos/tarefas/levantar-requisitos/#with-git","text":"Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material .","title":"with git"},{"location":"processos/tarefas/levantar-requisitos/#configuration","text":"Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true","title":"Configuration"},{"location":"processos/tarefas/levantar-requisitos/#feature-flags","text":"These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml .","title":"Feature flags"},{"location":"processos/tarefas/levantar-requisitos/#instant-loading","text":"The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches.","title":"Instant loading"},{"location":"processos/tarefas/levantar-requisitos/#tabs","text":"The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages.","title":"Tabs"},{"location":"processos/tarefas/levantar-requisitos/#language","text":"Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl","title":"Language"},{"location":"processos/tarefas/levantar-requisitos/#color-scheme","text":"Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Color scheme"},{"location":"processos/tarefas/levantar-requisitos/#color-palette","text":"The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; }","title":"Color palette"},{"location":"processos/tarefas/levantar-requisitos/#primary-color","text":"Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Primary color"},{"location":"processos/tarefas/levantar-requisitos/#accent-color","text":"Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Accent color"},{"location":"processos/tarefas/levantar-requisitos/#fonts","text":"Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false","title":"Fonts"},{"location":"processos/tarefas/levantar-requisitos/#icons","text":"Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown !","title":"Icons"},{"location":"processos/tarefas/levantar-requisitos/#logo","text":"Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer.","title":"Logo"},{"location":"processos/tarefas/levantar-requisitos/#favicon","text":"Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png","title":"Favicon"},{"location":"processos/tarefas/levantar-requisitos/#extras","text":"","title":"Extras"},{"location":"processos/tarefas/levantar-requisitos/#adding-a-source-repository","text":"To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not.","title":"Adding a source repository"},{"location":"processos/tarefas/levantar-requisitos/#adding-social-links","text":"Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link.","title":"Adding social links"},{"location":"processos/tarefas/levantar-requisitos/#adding-a-web-app-manifest","text":"A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest","title":"Adding a Web App Manifest"},{"location":"processos/tarefas/levantar-requisitos/#integrations","text":"","title":"Integrations"},{"location":"processos/tarefas/levantar-requisitos/#google-analytics","text":"MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q .","title":"Google Analytics"},{"location":"processos/tarefas/levantar-requisitos/#disqus","text":"Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata .","title":"Disqus"},{"location":"processos/tarefas/levantar-requisitos/#extensions","text":"Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions","title":"Extensions"},{"location":"processos/tarefas/levantar-requisitos/#plugins","text":"MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Plugins"},{"location":"visao-geral/one/","text":"OOOO \u00b6 OOOO.1 \u00b6 OOOO.1 \u00b6 demo Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FootNotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"eee2"},{"location":"visao-geral/one/#oooo","text":"","title":"OOOO"},{"location":"visao-geral/one/#oooo1","text":"","title":"OOOO.1"},{"location":"visao-geral/one/#oooo1_1","text":"demo Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FootNotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"OOOO.1"}]}